"use strict";(self.webpackChunkdatabases_in_action=self.webpackChunkdatabases_in_action||[]).push([[921],{8529:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>t,contentTitle:()=>l,default:()=>u,frontMatter:()=>a,metadata:()=>c,toc:()=>d});var i=s(4848),r=s(8453);const a={sidebar_position:7},l="Nested Queries",c={id:"Relational-Database-Management-Systems/Nested-Queries",title:"Nested Queries",description:"Subqueries",source:"@site/docs/Relational-Database-Management-Systems/Nested-Queries.md",sourceDirName:"Relational-Database-Management-Systems",slug:"/Relational-Database-Management-Systems/Nested-Queries",permalink:"/databases-in-action/docs/Relational-Database-Management-Systems/Nested-Queries",draft:!1,unlisted:!1,editUrl:"https://github.com/HMZElidrissi/databases-in-action/blob/main/docs/Relational-Database-Management-Systems/Nested-Queries.md",tags:[],version:"current",sidebarPosition:7,frontMatter:{sidebar_position:7},sidebar:"tutorialSidebar",previous:{title:"Joins",permalink:"/databases-in-action/docs/Relational-Database-Management-Systems/Joins"},next:{title:"View",permalink:"/databases-in-action/docs/Relational-Database-Management-Systems/Views"}},t={},d=[{value:"Subqueries",id:"subqueries",level:2},{value:"Subquery in the <code>WHERE</code> Clause",id:"subquery-in-the-where-clause",level:3},{value:"Subquery in the <code>FROM</code> Clause",id:"subquery-in-the-from-clause",level:3},{value:"Subquery in the <code>SELECT</code> Clause",id:"subquery-in-the-select-clause",level:3}];function o(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"nested-queries",children:"Nested Queries"}),"\n",(0,i.jsx)(n.h2,{id:"subqueries",children:"Subqueries"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["A ",(0,i.jsx)(n.strong,{children:"subquery"})," (or ",(0,i.jsx)(n.strong,{children:"inner query"})," or ",(0,i.jsx)(n.strong,{children:"nested query"}),") is a query nested within another query."]}),"\n",(0,i.jsx)(n.li,{children:"Subqueries can be constructed on multiple levels, allowing for complex querying patterns."}),"\n",(0,i.jsxs)(n.li,{children:["A subquery can be nested within various SQL statements, including ",(0,i.jsx)(n.code,{children:"SELECT"}),", ",(0,i.jsx)(n.code,{children:"INSERT"}),", ",(0,i.jsx)(n.code,{children:"UPDATE"}),", ",(0,i.jsx)(n.code,{children:"DELETE"}),", or within another subquery."]}),"\n",(0,i.jsx)(n.li,{children:"Many queries that utilize nesting can also be achieved using joins. The choice between a subquery and a join can depend on readability and performance considerations."}),"\n",(0,i.jsx)(n.li,{children:"The readability of subqueries versus joins can be subjective and varies depending on the specific use case and complexity."}),"\n",(0,i.jsx)(n.li,{children:"Often, but not always, a query with a join can be faster than a comparable query with nesting due to the way databases optimize joins. However, this is not a strict rule, and performance should be assessed on a case-by-case basis."}),"\n",(0,i.jsxs)(n.li,{children:["Subqueries can be placed in various parts of a query, such as:","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["The ",(0,i.jsx)(n.code,{children:"FROM"})," clause"]}),"\n",(0,i.jsxs)(n.li,{children:["The ",(0,i.jsx)(n.code,{children:"SELECT"})," clause"]}),"\n",(0,i.jsxs)(n.li,{children:["The ",(0,i.jsx)(n.code,{children:"WHERE"})," clause"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.h3,{id:"subquery-in-the-where-clause",children:["Subquery in the ",(0,i.jsx)(n.code,{children:"WHERE"})," Clause"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"SELECT *\nFROM table_name\nWHERE column_name OPERATOR (subquery);\n"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["OPERATOR can be:","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"+"}),", ",(0,i.jsx)(n.code,{children:"-"}),", ",(0,i.jsx)(n.code,{children:"*"}),", ",(0,i.jsx)(n.code,{children:"/"}),", ",(0,i.jsx)(n.code,{children:"="}),", ",(0,i.jsx)(n.code,{children:">"}),", ",(0,i.jsx)(n.code,{children:"<"}),", ",(0,i.jsx)(n.code,{children:">="}),", ",(0,i.jsx)(n.code,{children:"<="}),", ",(0,i.jsx)(n.code,{children:"<>"}),", ",(0,i.jsx)(n.code,{children:"!="})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"IN"}),", ",(0,i.jsx)(n.code,{children:"NOT IN"}),", ",(0,i.jsx)(n.code,{children:"EXISTS"}),", ",(0,i.jsx)(n.code,{children:"NOT EXISTS"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"ALL"}),", ",(0,i.jsx)(n.code,{children:"ANY"}),", ",(0,i.jsx)(n.code,{children:"SOME"})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.admonition,{title:"Operators",type:"tip",children:(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"IN"}),"/",(0,i.jsx)(n.code,{children:"NOT IN"})," can be used to compare a column to a list of values."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"SELECT *\nFROM table_name\nWHERE column_name IN (value1, value2, ...);\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"SELECT *\nFROM table_name\nWHERE column_name NOT IN (SELECT column_name FROM table_name);\n"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"EXISTS"}),"/",(0,i.jsx)(n.code,{children:"NOT EXISTS"})," can be used to check for the existence of rows in a subquery."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"SELECT * FROM table_name\nWHERE EXISTS (SELECT column_name FROM table_name WHERE condition);\n-- this is true if the subquery returns at least one row\n"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"ALL"}),"/",(0,i.jsx)(n.code,{children:"ANY"}),"/",(0,i.jsx)(n.code,{children:"SOME"})," can be used to compare a column to all, any, or some values returned by a subquery."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"SELECT *\nFROM table_name\nWHERE column_name OPERATOR ALL (subquery);\n"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"ALL"})," returns ",(0,i.jsx)(n.code,{children:"TRUE"})," if the comparison is ",(0,i.jsx)(n.code,{children:"TRUE"})," for all values in the subquery."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"ANY"})," and ",(0,i.jsx)(n.code,{children:"SOME"})," return ",(0,i.jsx)(n.code,{children:"TRUE"})," if the comparison is ",(0,i.jsx)(n.code,{children:"TRUE"})," for at least one value in the subquery."]}),"\n"]}),"\n"]}),"\n"]})}),"\n",(0,i.jsxs)(n.h3,{id:"subquery-in-the-from-clause",children:["Subquery in the ",(0,i.jsx)(n.code,{children:"FROM"})," Clause"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"SELECT *\nFROM (subquery) AS alias;\n"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"The subquery is executed first, and the result is used as a temporary table."}),"\n",(0,i.jsx)(n.li,{children:"It is necessary to provide an alias for the subquery to reference the temporary table."}),"\n",(0,i.jsx)(n.li,{children:"This technique is useful when the subquery returns a small result set that is used multiple times in the main query."}),"\n"]}),"\n",(0,i.jsxs)(n.h3,{id:"subquery-in-the-select-clause",children:["Subquery in the ",(0,i.jsx)(n.code,{children:"SELECT"})," Clause"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"SELECT column_name, (subquery) AS alias\nFROM table_name;\n"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"The subquery is executed for each row in the result set."}),"\n",(0,i.jsx)(n.li,{children:"The alias is used to reference the result of the subquery in the main query."}),"\n",(0,i.jsx)(n.li,{children:"This technique is useful when the subquery returns a single value that is used in the main query."}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"SELECT id, (SELECT COUNT(*)\n            FROM client c2, reservation\n            WHERE client_id = c2.id AND c1.id = c2.id) AS reservation_count\nFROM client c1;\n"})})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(o,{...e})}):o(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>c});var i=s(6540);const r={},a=i.createContext(r);function l(e){const n=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),i.createElement(a.Provider,{value:n},e.children)}}}]);