"use strict";(self.webpackChunkdatabases_in_action=self.webpackChunkdatabases_in_action||[]).push([[4223],{6304:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>h,frontMatter:()=>s,metadata:()=>o,toc:()=>c});var i=a(4848),t=a(8453);const s={sidebar_position:6},r="Database Migrations",o={id:"Laravel-Models/Database-Migrations",title:"Database Migrations",description:"Creating Migrations",source:"@site/docs/Laravel-Models/Database-Migrations.md",sourceDirName:"Laravel-Models",slug:"/Laravel-Models/Database-Migrations",permalink:"/databases-in-action/docs/Laravel-Models/Database-Migrations",draft:!1,unlisted:!1,editUrl:"https://github.com/HMZElidrissi/databases-in-action/blob/main/docs/Laravel-Models/Database-Migrations.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"tutorialSidebar",previous:{title:"Using Eloquent Collections and Serialization",permalink:"/databases-in-action/docs/Laravel-Models/Using-Eloquent-Collections-and-Serialization"},next:{title:"Laravel Routing",permalink:"/databases-in-action/docs/Laravel-Routing"}},l={},c=[{value:"Creating Migrations",id:"creating-migrations",level:2},{value:"<strong>Running Migrations</strong>",id:"running-migrations",level:2},{value:"Modifying Migrations",id:"modifying-migrations",level:2},{value:"Migration Rollback and Refresh",id:"migration-rollback-and-refresh",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",strong:"strong",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"database-migrations",children:"Database Migrations"}),"\n",(0,i.jsx)(n.h2,{id:"creating-migrations",children:"Creating Migrations"}),"\n",(0,i.jsx)(n.p,{children:"In Laravel, you use migrations to define the structure of your database tables. Migrations allow you to version-control your database schema and collaborate with others."}),"\n",(0,i.jsxs)(n.p,{children:["Example: Creating a migration for the ",(0,i.jsx)(n.code,{children:"posts"})," table."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"php artisan make:migration create_users_table\n"})}),"\n",(0,i.jsxs)(n.p,{children:["In the generated migration file, you can define the schema of the ",(0,i.jsx)(n.code,{children:"users"})," table using the Schema builder."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-php",children:"class CreateUsersTable extends Migration {\n\xa0\xa0\xa0\xa0public function up() {\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0Schema::create('users', function (Blueprint $table) {\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0$table->increments('id');\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0$table->string('name');\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0$table->string('email')->unique();\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0$table->timestamps();\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0});\n\xa0\xa0\xa0\xa0}\n\xa0\xa0\xa0\xa0public function down() {\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0Schema::dropIfExists('users');\n\xa0\xa0\xa0\xa0}\n}\n"})}),"\n",(0,i.jsx)(n.h2,{id:"running-migrations",children:(0,i.jsx)(n.strong,{children:"Running Migrations"})}),"\n",(0,i.jsxs)(n.p,{children:["To apply the database schema changes, you run migrations using the ",(0,i.jsx)(n.code,{children:"migrate"})," command:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"php artisan migrate\n"})}),"\n",(0,i.jsx)(n.h2,{id:"modifying-migrations",children:"Modifying Migrations"}),"\n",(0,i.jsx)(n.p,{children:"As your application evolves, you may need to modify existing migrations or create new ones to update the database schema. However, it\u2019s important to note that modifying a migration file that has already been executed can lead to inconsistencies in the database. In such cases, you should create a new migration to handle the desired changes."}),"\n",(0,i.jsxs)(n.p,{children:["To create a new migration file for modifying an existing table, you can use the ",(0,i.jsx)(n.code,{children:"make:migration"})," command with a descriptive name:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"php artisan make:migration add_role_to_users_table\n"})}),"\n",(0,i.jsx)(n.p,{children:"This will generate a new migration file that you can open and define the necessary changes, such as adding a new column to the \u2018users\u2019 table:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-php",children:"use Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Support\\Facades\\Schema;\nclass AddRoleToUsersTable extends Migration\n{\n\xa0\xa0\xa0\xa0public function up()\n\xa0\xa0\xa0\xa0{\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0Schema::table('users', function (Blueprint $table) {\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0$table->string('role')->nullable();\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0});\n\xa0\xa0\xa0\xa0}\n\xa0\xa0\xa0\xa0public function down()\n\xa0\xa0\xa0\xa0{\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0Schema::table('users', function (Blueprint $table) {\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0$table->dropColumn('role');\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0});\n\xa0\xa0\xa0\xa0}\n}\n"})}),"\n",(0,i.jsxs)(n.p,{children:["In this example, the ",(0,i.jsx)(n.code,{children:"up"})," method adds a new ",(0,i.jsx)(n.code,{children:"nullable"})," \u2018role\u2019 column to the \u2018users\u2019 table, while the ",(0,i.jsx)(n.code,{children:"down"})," method defines the rollback operation, which drops the \u2018role\u2019 column if needed."]}),"\n",(0,i.jsxs)(n.p,{children:["Once the new migration is defined, you can run the migrations again using the ",(0,i.jsx)(n.code,{children:"migrate"})," command:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"php artisan migrate\n"})}),"\n",(0,i.jsx)(n.p,{children:"This will apply the new migration and update the database schema accordingly."}),"\n",(0,i.jsx)(n.h2,{id:"migration-rollback-and-refresh",children:"Migration Rollback and Refresh"}),"\n",(0,i.jsxs)(n.p,{children:["To roll back the last batch of migrations, you can use the ",(0,i.jsx)(n.code,{children:"migrate:rollback"})," command:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"php artisan migrate:rollback\n"})}),"\n",(0,i.jsxs)(n.p,{children:["If you want to roll back all migrations and then rerun them, you can use the ",(0,i.jsx)(n.code,{children:"migrate:refresh"})," command:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"php artisan migrate:refresh\n"})})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,a)=>{a.d(n,{R:()=>r,x:()=>o});var i=a(6540);const t={},s=i.createContext(t);function r(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);