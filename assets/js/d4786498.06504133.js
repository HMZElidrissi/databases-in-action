"use strict";(self.webpackChunkdatabases_in_action=self.webpackChunkdatabases_in_action||[]).push([[411],{1785:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>o,contentTitle:()=>l,default:()=>h,frontMatter:()=>n,metadata:()=>i,toc:()=>d});var a=s(4848),r=s(8453);const n={sidebar_position:3},l="Example of a Laravel Blade Template",i={id:"Laravel-Views/Example-of-a-Laravel-Blade-Template",title:"Example of a Laravel Blade Template",description:"Let's go through an example of creating a Laravel Blade template. We'll create a template that displays user information using variables, loops, conditionals, and filters.",source:"@site/docs/Laravel-Views/Example-of-a-Laravel-Blade-Template.md",sourceDirName:"Laravel-Views",slug:"/Laravel-Views/Example-of-a-Laravel-Blade-Template",permalink:"/databases-in-action/docs/Laravel-Views/Example-of-a-Laravel-Blade-Template",draft:!1,unlisted:!1,editUrl:"https://github.com/HMZElidrissi/databases-in-action/blob/main/docs/Laravel-Views/Example-of-a-Laravel-Blade-Template.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Blade Directives",permalink:"/databases-in-action/docs/Laravel-Views/Blade-Directives"},next:{title:"Laravel Blade Layouts",permalink:"/databases-in-action/docs/Laravel-Views/Laravel-Blade-Layouts"}},o={},d=[{value:"<strong>Step 1: Create a Blade Template</strong>",id:"step-1-create-a-blade-template",level:3},{value:"<strong>Step 2: Controller</strong>",id:"step-2-controller",level:3},{value:"<strong>Step 3: Routes</strong>",id:"step-3-routes",level:3},{value:"<strong>Step 4: Use the <code>url()</code> Helper</strong>",id:"step-4-use-the-url-helper",level:3}];function c(e){const t={code:"code",h1:"h1",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.h1,{id:"example-of-a-laravel-blade-template",children:"Example of a Laravel Blade Template"}),"\n",(0,a.jsx)(t.p,{children:"Let's go through an example of creating a Laravel Blade template. We'll create a template that displays user information using variables, loops, conditionals, and filters."}),"\n",(0,a.jsx)(t.p,{children:"Assuming we have a Laravel application with a controller that retrieves user data and passes it to the view, let's create the necessary files:"}),"\n",(0,a.jsx)(t.h3,{id:"step-1-create-a-blade-template",children:(0,a.jsx)(t.strong,{children:"Step 1: Create a Blade Template"})}),"\n",(0,a.jsxs)(t.p,{children:["Create a Blade template named ",(0,a.jsx)(t.code,{children:"profile.blade.php"})," in the ",(0,a.jsx)(t.code,{children:"resources/views"})," directory. This will be the template to display user information."]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-php",children:'<!DOCTYPE html>\n<html>\n<head>\n    <meta charset="UTF-8">\n    <title>User Profile</title>\n</head>\n<body>\n    <h1>Welcome, {{ $user->name }}!</h1>\n\n    <p>Email: {{ $user->email }}</p>\n\n    @if ($user->is_admin)\n        <p>This user is an administrator.</p>\n    @else\n        <p>This user is not an administrator.</p>\n    @endif\n\n    <h2>Posts</h2>\n    <ul>\n        @foreach ($user->posts as $post)\n            <li>{{ $post->title }}</li>\n        @endforeach\n    </ul>\n\n    <h2>Interests</h2>\n    <ul>\n        @forelse ($user->interests as $interest)\n            <li>{{ $interest | ucfirst }}</li>\n        @empty\n            <li>No interests found.</li>\n        @endforelse\n    </ul>\n</body>\n</html>\n'})}),"\n",(0,a.jsx)(t.p,{children:"In this template:"}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsxs)(t.li,{children:["We use the ",(0,a.jsx)(t.code,{children:"{{ $user->name }}"})," syntax to display the user's name."]}),"\n",(0,a.jsxs)(t.li,{children:["We use the ",(0,a.jsx)(t.code,{children:"@if"})," directive to conditionally display whether the user is an administrator or not."]}),"\n",(0,a.jsxs)(t.li,{children:["We use the ",(0,a.jsx)(t.code,{children:"@foreach"})," directive to loop through the user's posts and display their titles."]}),"\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.code,{children:"@forelse"})," is a directive that works like ",(0,a.jsx)(t.code,{children:"@foreach"}),", but it has a special ",(0,a.jsx)(t.code,{children:"@empty"})," section that is displayed when the array is empty."]}),"\n",(0,a.jsxs)(t.li,{children:["We use the ",(0,a.jsx)(t.code,{children:"@forelse"})," directive to loop through the user's interests and apply the ",(0,a.jsx)(t.code,{children:"ucfirst"})," filter to capitalize the first letter of each interest. If there are no interests, a message is displayed."]}),"\n"]}),"\n",(0,a.jsx)(t.h3,{id:"step-2-controller",children:(0,a.jsx)(t.strong,{children:"Step 2: Controller"})}),"\n",(0,a.jsx)(t.p,{children:"Assuming you have a UserController, your method might look like this:"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-php",children:"public function showProfile($userId)\n{\n    $user = User::find($userId);\n    return view('profile', ['user' => $user]);\n}\n"})}),"\n",(0,a.jsx)(t.h3,{id:"step-3-routes",children:(0,a.jsx)(t.strong,{children:"Step 3: Routes"})}),"\n",(0,a.jsxs)(t.p,{children:["Define a route that maps to the ",(0,a.jsx)(t.code,{children:"showProfile"})," method of your UserController."]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-php",children:"Route::get('/profile/{userId}', 'UserController@showProfile')->name('show-profile');\n"})}),"\n",(0,a.jsx)(t.h3,{id:"step-4-use-the-url-helper",children:(0,a.jsxs)(t.strong,{children:["Step 4: Use the ",(0,a.jsx)(t.code,{children:"url()"})," Helper"]})}),"\n",(0,a.jsxs)(t.p,{children:["In your template, you can use the ",(0,a.jsx)(t.code,{children:"url()"})," helper function to generate URLs instead of hardcoding them. For example, instead of:"]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-php",children:'<a href="/profile/{{ $user->id }}">View Profile</a>\n'})}),"\n",(0,a.jsx)(t.p,{children:"You can use:"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-php",children:"<a href=\"{{ url('show-profile', ['userId' => $user->id]) }}\">View Profile</a>\n"})}),"\n",(0,a.jsxs)(t.p,{children:["The ",(0,a.jsx)(t.code,{children:"url()"})," function takes the route name and an array of route parameters."]})]})}function h(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}},8453:(e,t,s)=>{s.d(t,{R:()=>l,x:()=>i});var a=s(6540);const r={},n=a.createContext(r);function l(e){const t=a.useContext(n);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),a.createElement(n.Provider,{value:t},e.children)}}}]);